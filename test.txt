local folder-->> stage--> commit --> repo

git config --global user.name "Redwan"
git config --global user.email "jKJSKJ"


git status 
check status

git init
initialized

git add --a or git add .
all item stage

git commit -m "commit name"
take snapshot and save in local mechine

git log 
see all commit

git add first.txt
only the first.txt will go into stage

rm -rf .git
git local repo will deleted 

git clone server_repo_link
download the repo from server to our local mechine.





####file status life cycle
.git is the repo or folder
(UNTRACKED file)

git add (file is UNMODIFIED TRACKED STAGED)//first time called tracked

modify(MODIFIED)

git add(STAGED)

commit(UNMODIFIED)


#####git ignore
touch //touch is the commund that create new file in linux ( exe: touch name.txt)
 
 git ignore is use to ignore some file lets say we have a log file in our software and we want to ignore this 
 file we dont want this file to get commited

 to ignore some file 
 1. we have to make a file name .gitignore (this is a hidden file)
      to see hidden file in linux we have to write commund (ls -a)or (ls -al) or (ls -a1), 
 2. just write the name of the ignored file in the new file we have created then save
 3. to ignore some specific types of file lets say .exe or .log we can write *.log instead of the file name
 4. to ignore folder save the name of the folder folder/ (all folder with this name)
                                                 /folder/ (just the folder in the working folder)
                                                folder path (just the folder)

day2
       
##git diff

git diff
use to determine the difference between stage and working directory.

git diff --staged 
use to determine the difference between stage and last commited version.


##skipping the stage(direct commit)
git commit -a -m "name"
//all the tracked file will get commited (no untracked file will commited so if we create a new file this will not commited)







